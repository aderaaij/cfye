{"version":3,"sources":["editor-style.scss","elements/_e-fluidVideo.scss","elements/_e-blockquote.scss","../../../node_modules/breakpoint-sass/stylesheets/_breakpoint.scss","settings/_colors.scss","settings/_fonts.scss"],"names":[],"mappings":"AACA,mDAAY;ACDZ;EAGQ,YAAW;EACX,uBAAsB;EACtB,mBAAkB,EACrB;;AANL;EASQ,YAAW;EACX,aAAY;EACZ,mBAAkB,EACrB;;ADAL;EETQ,mBAAkB;EAClB,mBAAkB;EAClB,cAAa;EACb,iBAAgB;EAChB,6BAA4B,EAC/B;;ACwDD;EHpDJ;IEDQ,mBAAkB;IAClB,+BAA8B,EA2CrC,EAAA;;ACSG;EHpDJ;IEIQ,YAAW;IACX,wBAAuB,EAsC9B,EAAA;;AF3CD;EESQ,mBAAkB;EAClB,mCAA0B;UAA1B,2BAA0B;EAC1B,WAAU;EACV,kCAAyB;EAAzB,0BAAyB,EAC5B;;AFbL;EEgBQ,YAAW;EACX,mBAAkB;EAClB,QAAO;EACP,OAAM;EACN,aAAY;EACZ,WAAU;EACV,0BElCc;EFmCd,4BAAmB;UAAnB,oBAAmB;EACnB,qCAA4B;UAA5B,6BAA4B;EAC5B,sCAA6B;EAA7B,8BAA6B,EAKhC;ECsBD;IHpDJ;ME4BY,WAAU,EAEjB,EAAA;;AF9BL;;;EEmCY,WAAU;EACV,iCAAwB;UAAxB,yBAAwB,EAC3B;;AFrCT;;;EEwCY,4BAAmB;UAAnB,oBAAmB,EACtB;;AFzCT;EAGQ,+BAAsB;UAAtB,uBAAsB,EACzB;;AAJL;EAOQ,YAAW;EACX,uCKpB4B,ELoI/B;EAxHL;;;;;;;;IAkBY,iBAAgB;IAChB,eAAc,EACjB;EApBT;IAuBY,kBAAiB;IACjB,iBAAgB;IAChB,iBAAgB;IAChB,YAAW,EACd;EA3BT;IA8BY,eI1CU,EJ2Cb;EA/BT;IAmCY,oBAAmB;IACnB,iBAAgB,EAWnB;IA/CT;MAuCgB,WAAU;MACV,iCAAwB;cAAxB,yBAAwB;MACxB,eAAc,EACjB;IA1Cb;MA6CgB,4BAAmB;cAAnB,oBAAmB,EACtB;EA9Cb;IAkDY,sDK7DyC;IL8DzC,iBAAgB;IAChB,eItDU,EJuDb;EArDT;IAwDY,iBAAgB,EACnB;EAzDT;IA4DY,kBAAiB,EACpB;EA7DT;IAgEY,iBAAgB;IAChB,eAAc;IACd,eAAc;IACd,cAAa;IACb,0BAAyB;IACzB,YAAW,EAWd;IAhFT;MA4EgB,YAAW;MACX,eAAc;MACd,YAAW,EACd;EA/Eb;;IAoFY,0BAAyB;IACzB,cAAa;IACb,YAAW;IACX,iBAAgB;IAChB,eAAc,EACjB;EAzFT;IA4FY,WAAU;IACV,YAAW,EACd;EA9FT;IAoGoB,eAAc;IACd,eAAc;IACd,YAAW;IACX,iBAAgB,EACnB;EAxGjB;IA4GgB,mBAAkB,EACrB;EA7Gb;IAqHY,eAAc;IACd,kBAAiB,EACpB","file":"editor-style.css","sourcesContent":["// Import fonts\n@import url(\"https://use.typekit.net/nqe6umn.css\");\n@import 'breakpoint';\n\n@import 'settings/fonts';\n@import 'settings/colors';\n@import 'settings/breakpoints';\n\n\n@import 'elements/e-fluidVideo';\n@import 'elements/e-blockquote';\n\nbody {\n\n    & {\n        box-sizing: border-box;\n    }\n    \n    &#tinymce {\n        color: #000;\n        font-family: $fontBody;\n\n        p, \n        h1,\n        h2,\n        h3,\n        h4,\n        h5,\n        h6,\n        blockquote {\n            max-width: 670px;\n            margin: 0 auto;\n        }\n        \n        p {\n            font-size: 1.25em;\n            margin: 1em auto;\n            overflow: hidden;\n            clear: both;\n        }\n\n        a {\n            color: $colorPrimary;\n        }\n\n        blockquote {\n            @extend %e-blockquote;\n            visibility: visible;\n            margin: 2em auto;\n\n            p {\n                opacity: 1;\n                transform: translateY(0);\n                font-size: 1em;\n            }\n\n            &::before {\n                transform: scale(1);\n            }\n        }\n\n        h1,h2,h3,h4,h5,h6 {\n            font-family: $fontHeader;\n            font-weight: 800;\n            color: $colorGrey900;\n        }\n\n        h2 {\n            font-size: 1.5em;\n        }\n\n        h3 {\n            font-size: 1.25em;\n        }\n\n        .alignnone {\n            margin: 1em auto;\n            max-width: 90%;\n            min-width: 90%;\n            padding: 10px;\n            border: 1px solid #e0e0e0;\n            clear: both; \n\n            @include breakpoint($bpDesktopSmall) {\n                // max-width: 70%;\n            }\n\n            &::after {                \n                content: '';\n                display: table;\n                clear: both;\n            }\n        }\n\n        .alignleft,\n        .alignright {\n            border: 1px solid #e0e0e0;\n            padding: 10px;\n            float: left;\n            margin: 1em auto;\n            max-width: 35%;\n        }\n\n        .alignleft + alignright {\n            width: 50%;\n            float: left;\n        }\n\n        .wp-caption {\n\n            &-dt {\n                img {\n                    display: block;\n                    margin: 0 auto;\n                    width: 100%;\n                    max-width: 625px;\n                }\n            }\n\n            &-dd {\n                text-align: center;\n            }\n        }\n\n        .m-article__iframe {\n            @extend .e-fluidVideo;\n        }\n\n        .wpview {\n            max-width: 80%;\n            margin: 3rem auto;\n        }\n    }\n}",".e-fluidVideo {\n\n    & {\n        width: 100%;\n        padding-bottom: 56.25%;\n        position: relative;\n    }\n\n    iframe {\n        width: 100%;\n        height: 100%;\n        position: absolute;\n    }\n}","%e-blockquote {  \n    \n    & {\n        font-style: italic;\n        position: relative;\n        margin: 2em 0;    \n        text-align: left;\n        padding: 0.25em 0 0.25em 1em;\n    }\n\n    @include breakpoint($bpSmall) {\n        font-size: 1.75rem;\n        padding: 0.25rem 0 0.25rem 2em;\n    }\n\n    @include breakpoint($bpDesktop) {\n        width: 58vw;\n        left: calc(-29vw + 50%);\n    }\n    \n    p {\n        margin: 0.5rem 0 0;\n        transform: translateY(25%);\n        opacity: 0;\n        transition: all 0.3s ease;\n    }\n    \n    &::before {\n        content: '';\n        position: absolute;\n        left: 0;\n        top: 0;\n        height: 100%;\n        width: 2px;\n        background-color: $colorPrimary;\n        transform: scale(0);\n        transform-origin: top center;\n        transition: all 0.3s ease-out;\n\n        @include breakpoint($bpSmall) {\n            width: 4px;\n        }\n    }\n\n    &.is-active,\n    .no-js & {\n        p {\n            opacity: 1;\n            transform: translateY(0);\n        }\n\n        &::before {\n            transform: scale(1);\n        }\n    }\n}","//////////////////////////////\n// Default Variables\n//////////////////////////////\n$Breakpoint-Settings: (\n  'default media': all,\n  'default feature': min-width,\n  'default pair': width,\n\n  'force all media type': false,\n  'to ems': false,\n  'transform resolutions': true,\n\n  'no queries': false,\n  'no query fallbacks': false,\n\n  'base font size': 16px,\n\n  'legacy syntax': false\n);\n\n$breakpoint: () !default;\n\n//////////////////////////////\n// Imports\n//////////////////////////////\n@import \"breakpoint/settings\";\n@import 'breakpoint/context';\n@import 'breakpoint/helpers';\n@import 'breakpoint/parsers';\n@import 'breakpoint/no-query';\n\n@import 'breakpoint/respond-to';\n\n@import \"breakpoint/legacy-settings\";\n\n//////////////////////////////\n// Breakpoint Mixin\n//////////////////////////////\n\n@mixin breakpoint($query, $no-query: false) {\n  @include legacy-settings-warning;\n\n  // Reset contexts\n  @include private-breakpoint-reset-contexts();\n\n  $breakpoint: breakpoint($query, false);\n\n  $query-string: map-get($breakpoint, 'query');\n  $query-fallback: map-get($breakpoint, 'fallback');\n\n  $private-breakpoint-context-holder: map-get($breakpoint, 'context holder') !global;\n  $private-breakpoint-query-count: map-get($breakpoint, 'query count') !global;\n\n  // Allow for an as-needed override or usage of no query fallback.\n  @if $no-query != false {\n    $query-fallback: $no-query;\n  }\n\n  @if $query-fallback != false {\n    $context-setter: private-breakpoint-set-context('no-query', $query-fallback);\n  }\n\n  // Print Out Query String\n  @if not breakpoint-get('no queries') {\n    @media #{$query-string} {\n      @content;\n    }\n  }\n\n  @if breakpoint-get('no query fallbacks') != false or breakpoint-get('no queries') == true {\n\n    $type: type-of(breakpoint-get('no query fallbacks'));\n    $print: false;\n\n    @if ($type == 'bool') {\n      $print: true;\n    }\n    @else if ($type == 'string') {\n      @if $query-fallback == breakpoint-get('no query fallbacks') {\n        $print: true;\n      }\n    }\n    @else if ($type == 'list') {\n      @each $wrapper in breakpoint-get('no query fallbacks') {\n        @if $query-fallback == $wrapper {\n          $print: true;\n        }\n      }\n    }\n\n    // Write Fallback\n    @if ($query-fallback != false) and ($print == true) {\n      $type-fallback: type-of($query-fallback);\n\n      @if ($type-fallback != 'bool') {\n        #{$query-fallback} & {\n          @content;\n        }\n      }\n      @else {\n        @content;\n      }\n    }\n  }\n\n  @include private-breakpoint-reset-contexts();\n}\n\n\n@mixin mq($query, $no-query: false) {\n  @include breakpoint($query, $no-query) {\n    @content;\n  }\n}\n","$colorPrimary: #ec008c;\n\n$colorGrey100: #F5F5F5;\n$colorGrey200: #EEEEEE;\n$colorGrey300: #E0E0E0;\n$colorGrey400: #BDBDBD;\n$colorGrey500: #9E9E9E;\n$colorGrey600: #9E9E9E;\n$colorGrey700: #616161;\n$colorGrey800: #424242;\n$colorGrey900: #212121;","$fontBody: \"freight-text-pro\", serif;\n$fontHeader: \"jaf-bernino-sans-condensed\", sans-serif;"]}